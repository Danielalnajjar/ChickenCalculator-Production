spring:
  application:
    name: chicken-calculator
  
  # Database configuration - Use H2 if PostgreSQL not available
  datasource:
    url: ${DATABASE_URL:jdbc:h2:file:/app/data/chicken-calculator-db;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
    # HikariCP connection pool settings for Railway production
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:15}
      minimum-idle: ${DB_MIN_IDLE:5}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:300000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      pool-name: ChickenCalculatorPool-Prod
      connection-test-query: SELECT 1
      leak-detection-threshold: ${DB_LEAK_THRESHOLD:60000}
    
  # JPA Configuration
  jpa:
    hibernate:
      # SECURITY: Use validate to prevent automatic schema changes in production
      ddl-auto: validate
    show-sql: false
    database-platform: ${DATABASE_PLATFORM:org.hibernate.dialect.H2Dialect}
    properties:
      hibernate:
        dialect: ${DATABASE_DIALECT:org.hibernate.dialect.H2Dialect}
    
  # Flyway configuration for production
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    validate-on-migrate: true
    # Disable clean and repair in production for safety
    clean-disabled: true

  # H2 Console - SECURITY: Explicitly disabled in production to prevent database access
  h2:
    console:
      enabled: false
      settings:
        web-allow-others: false

# Server configuration
server:
  port: ${PORT:8080}
  forward-headers-strategy: native
  
# CORS configuration for production
cors:
  allowed-origins: 
    - ${FRONTEND_URL:http://localhost:3000}
    - ${RAILWAY_STATIC_URL:https://*.railway.app}
    - ${CUSTOM_DOMAIN:https://your-domain.com}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# JWT Configuration - SECURITY: JWT_SECRET must be set as environment variable
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

# Actuator for health checks and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  metrics:
    export:
      simple:
        enabled: true
    # Enable HikariCP metrics
    enable:
      hikaricp: true
      
# Logging with HikariCP pool monitoring
logging:
  level:
    com.example.chickencalculator: INFO
    org.springframework.web: INFO
    # Enable HikariCP pool statistics logging
    com.zaxxer.hikari.HikariConfig: DEBUG
    com.zaxxer.hikari: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"